// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: multisigwallet/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateWallet struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Members  string `protobuf:"bytes,3,opt,name=members,proto3" json:"members,omitempty"`
	MinSigns string `protobuf:"bytes,4,opt,name=minSigns,proto3" json:"minSigns,omitempty"`
}

func (m *MsgCreateWallet) Reset()         { *m = MsgCreateWallet{} }
func (m *MsgCreateWallet) String() string { return proto.CompactTextString(m) }
func (*MsgCreateWallet) ProtoMessage()    {}
func (*MsgCreateWallet) Descriptor() ([]byte, []int) {
	return fileDescriptor_0580ec33bca14701, []int{0}
}
func (m *MsgCreateWallet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateWallet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateWallet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateWallet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateWallet.Merge(m, src)
}
func (m *MsgCreateWallet) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateWallet) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateWallet.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateWallet proto.InternalMessageInfo

func (m *MsgCreateWallet) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateWallet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateWallet) GetMembers() string {
	if m != nil {
		return m.Members
	}
	return ""
}

func (m *MsgCreateWallet) GetMinSigns() string {
	if m != nil {
		return m.MinSigns
	}
	return ""
}

type MsgCreateWalletResponse struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgCreateWalletResponse) Reset()         { *m = MsgCreateWalletResponse{} }
func (m *MsgCreateWalletResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateWalletResponse) ProtoMessage()    {}
func (*MsgCreateWalletResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0580ec33bca14701, []int{1}
}
func (m *MsgCreateWalletResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateWalletResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateWalletResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateWalletResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateWalletResponse.Merge(m, src)
}
func (m *MsgCreateWalletResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateWalletResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateWalletResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateWalletResponse proto.InternalMessageInfo

func (m *MsgCreateWalletResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgCreateTransaction struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	WalltName string `protobuf:"bytes,2,opt,name=walltName,proto3" json:"walltName,omitempty"`
	ToAddress string `protobuf:"bytes,3,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	Amount    string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (m *MsgCreateTransaction) Reset()         { *m = MsgCreateTransaction{} }
func (m *MsgCreateTransaction) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTransaction) ProtoMessage()    {}
func (*MsgCreateTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_0580ec33bca14701, []int{2}
}
func (m *MsgCreateTransaction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransaction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransaction.Merge(m, src)
}
func (m *MsgCreateTransaction) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransaction proto.InternalMessageInfo

func (m *MsgCreateTransaction) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTransaction) GetWalltName() string {
	if m != nil {
		return m.WalltName
	}
	return ""
}

func (m *MsgCreateTransaction) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *MsgCreateTransaction) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type MsgCreateTransactionResponse struct {
}

func (m *MsgCreateTransactionResponse) Reset()         { *m = MsgCreateTransactionResponse{} }
func (m *MsgCreateTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTransactionResponse) ProtoMessage()    {}
func (*MsgCreateTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0580ec33bca14701, []int{3}
}
func (m *MsgCreateTransactionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransactionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransactionResponse.Merge(m, src)
}
func (m *MsgCreateTransactionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransactionResponse proto.InternalMessageInfo

type MsgSignTransaction struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TransactionID string `protobuf:"bytes,2,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
}

func (m *MsgSignTransaction) Reset()         { *m = MsgSignTransaction{} }
func (m *MsgSignTransaction) String() string { return proto.CompactTextString(m) }
func (*MsgSignTransaction) ProtoMessage()    {}
func (*MsgSignTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_0580ec33bca14701, []int{4}
}
func (m *MsgSignTransaction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSignTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSignTransaction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSignTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSignTransaction.Merge(m, src)
}
func (m *MsgSignTransaction) XXX_Size() int {
	return m.Size()
}
func (m *MsgSignTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSignTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSignTransaction proto.InternalMessageInfo

func (m *MsgSignTransaction) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSignTransaction) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type MsgSignTransactionResponse struct {
}

func (m *MsgSignTransactionResponse) Reset()         { *m = MsgSignTransactionResponse{} }
func (m *MsgSignTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSignTransactionResponse) ProtoMessage()    {}
func (*MsgSignTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0580ec33bca14701, []int{5}
}
func (m *MsgSignTransactionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSignTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSignTransactionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSignTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSignTransactionResponse.Merge(m, src)
}
func (m *MsgSignTransactionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSignTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSignTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSignTransactionResponse proto.InternalMessageInfo

type MsgExecuteTransaction struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TransactionID string `protobuf:"bytes,2,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
}

func (m *MsgExecuteTransaction) Reset()         { *m = MsgExecuteTransaction{} }
func (m *MsgExecuteTransaction) String() string { return proto.CompactTextString(m) }
func (*MsgExecuteTransaction) ProtoMessage()    {}
func (*MsgExecuteTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_0580ec33bca14701, []int{6}
}
func (m *MsgExecuteTransaction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgExecuteTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgExecuteTransaction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgExecuteTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgExecuteTransaction.Merge(m, src)
}
func (m *MsgExecuteTransaction) XXX_Size() int {
	return m.Size()
}
func (m *MsgExecuteTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgExecuteTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_MsgExecuteTransaction proto.InternalMessageInfo

func (m *MsgExecuteTransaction) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgExecuteTransaction) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type MsgExecuteTransactionResponse struct {
}

func (m *MsgExecuteTransactionResponse) Reset()         { *m = MsgExecuteTransactionResponse{} }
func (m *MsgExecuteTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgExecuteTransactionResponse) ProtoMessage()    {}
func (*MsgExecuteTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0580ec33bca14701, []int{7}
}
func (m *MsgExecuteTransactionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgExecuteTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgExecuteTransactionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgExecuteTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgExecuteTransactionResponse.Merge(m, src)
}
func (m *MsgExecuteTransactionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgExecuteTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgExecuteTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgExecuteTransactionResponse proto.InternalMessageInfo

type MsgUpdateMinSigns struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	WalletName string `protobuf:"bytes,2,opt,name=walletName,proto3" json:"walletName,omitempty"`
	MinSigns   string `protobuf:"bytes,3,opt,name=minSigns,proto3" json:"minSigns,omitempty"`
}

func (m *MsgUpdateMinSigns) Reset()         { *m = MsgUpdateMinSigns{} }
func (m *MsgUpdateMinSigns) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMinSigns) ProtoMessage()    {}
func (*MsgUpdateMinSigns) Descriptor() ([]byte, []int) {
	return fileDescriptor_0580ec33bca14701, []int{8}
}
func (m *MsgUpdateMinSigns) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMinSigns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMinSigns.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMinSigns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMinSigns.Merge(m, src)
}
func (m *MsgUpdateMinSigns) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMinSigns) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMinSigns.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMinSigns proto.InternalMessageInfo

func (m *MsgUpdateMinSigns) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateMinSigns) GetWalletName() string {
	if m != nil {
		return m.WalletName
	}
	return ""
}

func (m *MsgUpdateMinSigns) GetMinSigns() string {
	if m != nil {
		return m.MinSigns
	}
	return ""
}

type MsgUpdateMinSignsResponse struct {
}

func (m *MsgUpdateMinSignsResponse) Reset()         { *m = MsgUpdateMinSignsResponse{} }
func (m *MsgUpdateMinSignsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMinSignsResponse) ProtoMessage()    {}
func (*MsgUpdateMinSignsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0580ec33bca14701, []int{9}
}
func (m *MsgUpdateMinSignsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMinSignsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMinSignsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMinSignsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMinSignsResponse.Merge(m, src)
}
func (m *MsgUpdateMinSignsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMinSignsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMinSignsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMinSignsResponse proto.InternalMessageInfo

type MsgAddMember struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	WalltName string `protobuf:"bytes,2,opt,name=walltName,proto3" json:"walltName,omitempty"`
	Member    string `protobuf:"bytes,3,opt,name=member,proto3" json:"member,omitempty"`
}

func (m *MsgAddMember) Reset()         { *m = MsgAddMember{} }
func (m *MsgAddMember) String() string { return proto.CompactTextString(m) }
func (*MsgAddMember) ProtoMessage()    {}
func (*MsgAddMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_0580ec33bca14701, []int{10}
}
func (m *MsgAddMember) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddMember.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddMember.Merge(m, src)
}
func (m *MsgAddMember) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddMember) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddMember.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddMember proto.InternalMessageInfo

func (m *MsgAddMember) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddMember) GetWalltName() string {
	if m != nil {
		return m.WalltName
	}
	return ""
}

func (m *MsgAddMember) GetMember() string {
	if m != nil {
		return m.Member
	}
	return ""
}

type MsgAddMemberResponse struct {
}

func (m *MsgAddMemberResponse) Reset()         { *m = MsgAddMemberResponse{} }
func (m *MsgAddMemberResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddMemberResponse) ProtoMessage()    {}
func (*MsgAddMemberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0580ec33bca14701, []int{11}
}
func (m *MsgAddMemberResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddMemberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddMemberResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddMemberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddMemberResponse.Merge(m, src)
}
func (m *MsgAddMemberResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddMemberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddMemberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddMemberResponse proto.InternalMessageInfo

type MsgSignMemberTransaction struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TransactionID string `protobuf:"bytes,2,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
}

func (m *MsgSignMemberTransaction) Reset()         { *m = MsgSignMemberTransaction{} }
func (m *MsgSignMemberTransaction) String() string { return proto.CompactTextString(m) }
func (*MsgSignMemberTransaction) ProtoMessage()    {}
func (*MsgSignMemberTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_0580ec33bca14701, []int{12}
}
func (m *MsgSignMemberTransaction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSignMemberTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSignMemberTransaction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSignMemberTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSignMemberTransaction.Merge(m, src)
}
func (m *MsgSignMemberTransaction) XXX_Size() int {
	return m.Size()
}
func (m *MsgSignMemberTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSignMemberTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSignMemberTransaction proto.InternalMessageInfo

func (m *MsgSignMemberTransaction) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSignMemberTransaction) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type MsgSignMemberTransactionResponse struct {
}

func (m *MsgSignMemberTransactionResponse) Reset()         { *m = MsgSignMemberTransactionResponse{} }
func (m *MsgSignMemberTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSignMemberTransactionResponse) ProtoMessage()    {}
func (*MsgSignMemberTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0580ec33bca14701, []int{13}
}
func (m *MsgSignMemberTransactionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSignMemberTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSignMemberTransactionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSignMemberTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSignMemberTransactionResponse.Merge(m, src)
}
func (m *MsgSignMemberTransactionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSignMemberTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSignMemberTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSignMemberTransactionResponse proto.InternalMessageInfo

type MsgRemoveMember struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	WalltName string `protobuf:"bytes,2,opt,name=walltName,proto3" json:"walltName,omitempty"`
	Member    string `protobuf:"bytes,3,opt,name=member,proto3" json:"member,omitempty"`
}

func (m *MsgRemoveMember) Reset()         { *m = MsgRemoveMember{} }
func (m *MsgRemoveMember) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveMember) ProtoMessage()    {}
func (*MsgRemoveMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_0580ec33bca14701, []int{14}
}
func (m *MsgRemoveMember) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveMember.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveMember.Merge(m, src)
}
func (m *MsgRemoveMember) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveMember) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveMember.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveMember proto.InternalMessageInfo

func (m *MsgRemoveMember) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveMember) GetWalltName() string {
	if m != nil {
		return m.WalltName
	}
	return ""
}

func (m *MsgRemoveMember) GetMember() string {
	if m != nil {
		return m.Member
	}
	return ""
}

type MsgRemoveMemberResponse struct {
}

func (m *MsgRemoveMemberResponse) Reset()         { *m = MsgRemoveMemberResponse{} }
func (m *MsgRemoveMemberResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveMemberResponse) ProtoMessage()    {}
func (*MsgRemoveMemberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0580ec33bca14701, []int{15}
}
func (m *MsgRemoveMemberResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveMemberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveMemberResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveMemberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveMemberResponse.Merge(m, src)
}
func (m *MsgRemoveMemberResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveMemberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveMemberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveMemberResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateWallet)(nil), "threefoldtech.threefoldhub.multisigwallet.MsgCreateWallet")
	proto.RegisterType((*MsgCreateWalletResponse)(nil), "threefoldtech.threefoldhub.multisigwallet.MsgCreateWalletResponse")
	proto.RegisterType((*MsgCreateTransaction)(nil), "threefoldtech.threefoldhub.multisigwallet.MsgCreateTransaction")
	proto.RegisterType((*MsgCreateTransactionResponse)(nil), "threefoldtech.threefoldhub.multisigwallet.MsgCreateTransactionResponse")
	proto.RegisterType((*MsgSignTransaction)(nil), "threefoldtech.threefoldhub.multisigwallet.MsgSignTransaction")
	proto.RegisterType((*MsgSignTransactionResponse)(nil), "threefoldtech.threefoldhub.multisigwallet.MsgSignTransactionResponse")
	proto.RegisterType((*MsgExecuteTransaction)(nil), "threefoldtech.threefoldhub.multisigwallet.MsgExecuteTransaction")
	proto.RegisterType((*MsgExecuteTransactionResponse)(nil), "threefoldtech.threefoldhub.multisigwallet.MsgExecuteTransactionResponse")
	proto.RegisterType((*MsgUpdateMinSigns)(nil), "threefoldtech.threefoldhub.multisigwallet.MsgUpdateMinSigns")
	proto.RegisterType((*MsgUpdateMinSignsResponse)(nil), "threefoldtech.threefoldhub.multisigwallet.MsgUpdateMinSignsResponse")
	proto.RegisterType((*MsgAddMember)(nil), "threefoldtech.threefoldhub.multisigwallet.MsgAddMember")
	proto.RegisterType((*MsgAddMemberResponse)(nil), "threefoldtech.threefoldhub.multisigwallet.MsgAddMemberResponse")
	proto.RegisterType((*MsgSignMemberTransaction)(nil), "threefoldtech.threefoldhub.multisigwallet.MsgSignMemberTransaction")
	proto.RegisterType((*MsgSignMemberTransactionResponse)(nil), "threefoldtech.threefoldhub.multisigwallet.MsgSignMemberTransactionResponse")
	proto.RegisterType((*MsgRemoveMember)(nil), "threefoldtech.threefoldhub.multisigwallet.MsgRemoveMember")
	proto.RegisterType((*MsgRemoveMemberResponse)(nil), "threefoldtech.threefoldhub.multisigwallet.MsgRemoveMemberResponse")
}

func init() { proto.RegisterFile("multisigwallet/tx.proto", fileDescriptor_0580ec33bca14701) }

var fileDescriptor_0580ec33bca14701 = []byte{
	// 615 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xcd, 0x8b, 0xd3, 0x40,
	0x14, 0xef, 0xd8, 0xa5, 0xda, 0xc7, 0xea, 0xb2, 0xc1, 0xed, 0x66, 0x63, 0x8d, 0x4b, 0xf0, 0xa0,
	0x97, 0x16, 0xdc, 0x83, 0x20, 0x2e, 0xeb, 0x7e, 0xa1, 0x22, 0xf1, 0x50, 0x57, 0x0a, 0x7b, 0x50,
	0xd2, 0x66, 0x4c, 0x03, 0x4d, 0xa6, 0x64, 0x26, 0x5a, 0xef, 0x7a, 0x15, 0x0f, 0x82, 0x27, 0xc1,
	0xab, 0xff, 0x89, 0x37, 0xf7, 0xe8, 0x51, 0xda, 0x7f, 0x44, 0x32, 0x9d, 0x4e, 0x9a, 0x0f, 0x97,
	0xa6, 0x5d, 0x6f, 0x79, 0x6f, 0xe6, 0xf7, 0x31, 0x99, 0x97, 0x1f, 0x81, 0x4d, 0x2f, 0xec, 0x33,
	0x97, 0xba, 0xce, 0x3b, 0xab, 0xdf, 0xc7, 0xac, 0xc9, 0x86, 0x8d, 0x41, 0x40, 0x18, 0x51, 0xee,
	0xb2, 0x5e, 0x80, 0xf1, 0x1b, 0xd2, 0xb7, 0x19, 0xee, 0xf6, 0x1a, 0xb2, 0xea, 0x85, 0x9d, 0x46,
	0x12, 0x63, 0x84, 0xb0, 0x66, 0x52, 0xe7, 0x30, 0xc0, 0x16, 0xc3, 0x6d, 0xde, 0x52, 0x54, 0xb8,
	0xdc, 0x8d, 0x6a, 0x12, 0xa8, 0x68, 0x1b, 0xdd, 0xa9, 0xb6, 0xa6, 0xa5, 0xa2, 0xc0, 0x8a, 0x6f,
	0x79, 0x58, 0xbd, 0xc4, 0xdb, 0xfc, 0x39, 0xda, 0xed, 0x61, 0xaf, 0x83, 0x03, 0xaa, 0x96, 0x27,
	0xbb, 0x45, 0xa9, 0x68, 0x70, 0xc5, 0x73, 0xfd, 0x17, 0xae, 0xe3, 0x53, 0x75, 0x85, 0x2f, 0xc9,
	0xda, 0xd8, 0x81, 0xcd, 0x94, 0x6c, 0x0b, 0xd3, 0x01, 0xf1, 0x29, 0x27, 0xb4, 0x6c, 0x3b, 0xc0,
	0x94, 0x4e, 0xe5, 0x45, 0x69, 0x7c, 0x40, 0x70, 0x5d, 0xa2, 0x4e, 0x02, 0xcb, 0xa7, 0x56, 0x97,
	0xb9, 0xc4, 0x3f, 0xc7, 0x71, 0x1d, 0xaa, 0xd1, 0x41, 0xd9, 0xf3, 0xd8, 0x76, 0xdc, 0x88, 0x56,
	0x19, 0xd9, 0x17, 0x62, 0x13, 0xf7, 0x71, 0x43, 0xa9, 0x41, 0xc5, 0xf2, 0x48, 0xe8, 0x33, 0xe1,
	0x5e, 0x54, 0x86, 0x0e, 0xf5, 0x3c, 0x17, 0xd3, 0x03, 0x18, 0x27, 0xa0, 0x98, 0xd4, 0x89, 0xce,
	0x39, 0x9f, 0xc7, 0xdb, 0x70, 0x95, 0xc5, 0x1b, 0x9f, 0x1e, 0x09, 0x9f, 0xc9, 0xa6, 0x51, 0x07,
	0x2d, 0xcb, 0x2a, 0x35, 0xdb, 0xb0, 0x61, 0x52, 0xe7, 0x78, 0x88, 0xbb, 0xe1, 0xbc, 0xaf, 0x66,
	0x3e, 0xd9, 0x5b, 0x70, 0x33, 0x97, 0x58, 0x2a, 0xbb, 0xb0, 0x6e, 0x52, 0xe7, 0xe5, 0xc0, 0xb6,
	0x18, 0x36, 0xc5, 0xf5, 0x9e, 0xa3, 0xaa, 0x03, 0x4c, 0x26, 0x6f, 0xe6, 0x46, 0x66, 0x3a, 0x89,
	0xa1, 0x29, 0xa7, 0x86, 0xe6, 0x06, 0x6c, 0x65, 0xa4, 0xa4, 0x8f, 0x57, 0xb0, 0x6a, 0x52, 0x67,
	0xdf, 0xb6, 0x4d, 0x3e, 0x7e, 0x0b, 0xcf, 0x44, 0x0d, 0x2a, 0x93, 0x01, 0x16, 0xf2, 0xa2, 0x32,
	0x6a, 0x7c, 0xf6, 0x24, 0xbf, 0xd4, 0x3d, 0x05, 0x55, 0xdc, 0xcb, 0x64, 0xe1, 0x22, 0x5f, 0xbe,
	0x01, 0xdb, 0xff, 0xe2, 0x96, 0xfa, 0x16, 0xff, 0x80, 0x5b, 0xd8, 0x23, 0x6f, 0xf1, 0x7f, 0x3a,
	0xfa, 0x16, 0xff, 0x58, 0x67, 0x25, 0xa6, 0xea, 0xf7, 0x7e, 0x55, 0xa1, 0x6c, 0x52, 0x47, 0xf9,
	0x84, 0x60, 0x35, 0x11, 0x22, 0x0f, 0x1a, 0x73, 0x67, 0x50, 0x23, 0x95, 0x04, 0xda, 0xc1, 0xe2,
	0x58, 0x99, 0x22, 0xdf, 0x10, 0xac, 0x67, 0x83, 0x62, 0x6f, 0x11, 0xe6, 0x19, 0x02, 0xed, 0xf1,
	0x92, 0x04, 0xd2, 0xdf, 0x57, 0x04, 0x6b, 0xe9, 0x88, 0xd8, 0x2d, 0x46, 0x9e, 0x82, 0x6b, 0xc7,
	0x4b, 0xc1, 0xa5, 0xb3, 0xef, 0x08, 0x94, 0x9c, 0x20, 0x79, 0x54, 0x8c, 0x3d, 0xcb, 0xa0, 0x3d,
	0x59, 0x96, 0x41, 0x5a, 0xfc, 0x82, 0xe0, 0x5a, 0x2a, 0x71, 0x1e, 0x16, 0x23, 0x4f, 0xa2, 0xb5,
	0xa3, 0x65, 0xd0, 0xd2, 0xd6, 0x47, 0x04, 0xd5, 0x38, 0x80, 0xee, 0x17, 0xe3, 0x94, 0x40, 0x6d,
	0x6f, 0x41, 0xa0, 0xf4, 0xf1, 0x03, 0xc1, 0x46, 0x7e, 0x20, 0x1d, 0x16, 0x1f, 0x91, 0x0c, 0x89,
	0xf6, 0xec, 0x02, 0x48, 0xa4, 0xd7, 0x28, 0x38, 0x12, 0xe1, 0x55, 0x30, 0x38, 0x66, 0xb1, 0x45,
	0x83, 0x23, 0x2f, 0xd1, 0x0e, 0xda, 0x3f, 0x47, 0x3a, 0x3a, 0x1b, 0xe9, 0xe8, 0xcf, 0x48, 0x47,
	0x9f, 0xc7, 0x7a, 0xe9, 0x6c, 0xac, 0x97, 0x7e, 0x8f, 0xf5, 0xd2, 0xe9, 0xae, 0xe3, 0xb2, 0x88,
	0xa8, 0x4b, 0xbc, 0x66, 0x42, 0x27, 0xae, 0x5e, 0xf7, 0xc2, 0x4e, 0x73, 0xd8, 0x4c, 0xff, 0x97,
	0xbd, 0x1f, 0x60, 0xda, 0xa9, 0xf0, 0x7f, 0xb3, 0x9d, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe6,
	0xbd, 0xfc, 0x07, 0xb6, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateWallet(ctx context.Context, in *MsgCreateWallet, opts ...grpc.CallOption) (*MsgCreateWalletResponse, error)
	CreateTransaction(ctx context.Context, in *MsgCreateTransaction, opts ...grpc.CallOption) (*MsgCreateTransactionResponse, error)
	SignTransaction(ctx context.Context, in *MsgSignTransaction, opts ...grpc.CallOption) (*MsgSignTransactionResponse, error)
	ExecuteTransaction(ctx context.Context, in *MsgExecuteTransaction, opts ...grpc.CallOption) (*MsgExecuteTransactionResponse, error)
	UpdateMinSigns(ctx context.Context, in *MsgUpdateMinSigns, opts ...grpc.CallOption) (*MsgUpdateMinSignsResponse, error)
	AddMember(ctx context.Context, in *MsgAddMember, opts ...grpc.CallOption) (*MsgAddMemberResponse, error)
	SignMemberTransaction(ctx context.Context, in *MsgSignMemberTransaction, opts ...grpc.CallOption) (*MsgSignMemberTransactionResponse, error)
	RemoveMember(ctx context.Context, in *MsgRemoveMember, opts ...grpc.CallOption) (*MsgRemoveMemberResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateWallet(ctx context.Context, in *MsgCreateWallet, opts ...grpc.CallOption) (*MsgCreateWalletResponse, error) {
	out := new(MsgCreateWalletResponse)
	err := c.cc.Invoke(ctx, "/threefoldtech.threefoldhub.multisigwallet.Msg/CreateWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTransaction(ctx context.Context, in *MsgCreateTransaction, opts ...grpc.CallOption) (*MsgCreateTransactionResponse, error) {
	out := new(MsgCreateTransactionResponse)
	err := c.cc.Invoke(ctx, "/threefoldtech.threefoldhub.multisigwallet.Msg/CreateTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SignTransaction(ctx context.Context, in *MsgSignTransaction, opts ...grpc.CallOption) (*MsgSignTransactionResponse, error) {
	out := new(MsgSignTransactionResponse)
	err := c.cc.Invoke(ctx, "/threefoldtech.threefoldhub.multisigwallet.Msg/SignTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ExecuteTransaction(ctx context.Context, in *MsgExecuteTransaction, opts ...grpc.CallOption) (*MsgExecuteTransactionResponse, error) {
	out := new(MsgExecuteTransactionResponse)
	err := c.cc.Invoke(ctx, "/threefoldtech.threefoldhub.multisigwallet.Msg/ExecuteTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateMinSigns(ctx context.Context, in *MsgUpdateMinSigns, opts ...grpc.CallOption) (*MsgUpdateMinSignsResponse, error) {
	out := new(MsgUpdateMinSignsResponse)
	err := c.cc.Invoke(ctx, "/threefoldtech.threefoldhub.multisigwallet.Msg/UpdateMinSigns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddMember(ctx context.Context, in *MsgAddMember, opts ...grpc.CallOption) (*MsgAddMemberResponse, error) {
	out := new(MsgAddMemberResponse)
	err := c.cc.Invoke(ctx, "/threefoldtech.threefoldhub.multisigwallet.Msg/AddMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SignMemberTransaction(ctx context.Context, in *MsgSignMemberTransaction, opts ...grpc.CallOption) (*MsgSignMemberTransactionResponse, error) {
	out := new(MsgSignMemberTransactionResponse)
	err := c.cc.Invoke(ctx, "/threefoldtech.threefoldhub.multisigwallet.Msg/SignMemberTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveMember(ctx context.Context, in *MsgRemoveMember, opts ...grpc.CallOption) (*MsgRemoveMemberResponse, error) {
	out := new(MsgRemoveMemberResponse)
	err := c.cc.Invoke(ctx, "/threefoldtech.threefoldhub.multisigwallet.Msg/RemoveMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateWallet(context.Context, *MsgCreateWallet) (*MsgCreateWalletResponse, error)
	CreateTransaction(context.Context, *MsgCreateTransaction) (*MsgCreateTransactionResponse, error)
	SignTransaction(context.Context, *MsgSignTransaction) (*MsgSignTransactionResponse, error)
	ExecuteTransaction(context.Context, *MsgExecuteTransaction) (*MsgExecuteTransactionResponse, error)
	UpdateMinSigns(context.Context, *MsgUpdateMinSigns) (*MsgUpdateMinSignsResponse, error)
	AddMember(context.Context, *MsgAddMember) (*MsgAddMemberResponse, error)
	SignMemberTransaction(context.Context, *MsgSignMemberTransaction) (*MsgSignMemberTransactionResponse, error)
	RemoveMember(context.Context, *MsgRemoveMember) (*MsgRemoveMemberResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateWallet(ctx context.Context, req *MsgCreateWallet) (*MsgCreateWalletResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWallet not implemented")
}
func (*UnimplementedMsgServer) CreateTransaction(ctx context.Context, req *MsgCreateTransaction) (*MsgCreateTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransaction not implemented")
}
func (*UnimplementedMsgServer) SignTransaction(ctx context.Context, req *MsgSignTransaction) (*MsgSignTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignTransaction not implemented")
}
func (*UnimplementedMsgServer) ExecuteTransaction(ctx context.Context, req *MsgExecuteTransaction) (*MsgExecuteTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteTransaction not implemented")
}
func (*UnimplementedMsgServer) UpdateMinSigns(ctx context.Context, req *MsgUpdateMinSigns) (*MsgUpdateMinSignsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMinSigns not implemented")
}
func (*UnimplementedMsgServer) AddMember(ctx context.Context, req *MsgAddMember) (*MsgAddMemberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddMember not implemented")
}
func (*UnimplementedMsgServer) SignMemberTransaction(ctx context.Context, req *MsgSignMemberTransaction) (*MsgSignMemberTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignMemberTransaction not implemented")
}
func (*UnimplementedMsgServer) RemoveMember(ctx context.Context, req *MsgRemoveMember) (*MsgRemoveMemberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveMember not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateWallet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threefoldtech.threefoldhub.multisigwallet.Msg/CreateWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateWallet(ctx, req.(*MsgCreateWallet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threefoldtech.threefoldhub.multisigwallet.Msg/CreateTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTransaction(ctx, req.(*MsgCreateTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SignTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSignTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SignTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threefoldtech.threefoldhub.multisigwallet.Msg/SignTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SignTransaction(ctx, req.(*MsgSignTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ExecuteTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgExecuteTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ExecuteTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threefoldtech.threefoldhub.multisigwallet.Msg/ExecuteTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ExecuteTransaction(ctx, req.(*MsgExecuteTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateMinSigns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateMinSigns)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateMinSigns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threefoldtech.threefoldhub.multisigwallet.Msg/UpdateMinSigns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateMinSigns(ctx, req.(*MsgUpdateMinSigns))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddMember)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threefoldtech.threefoldhub.multisigwallet.Msg/AddMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddMember(ctx, req.(*MsgAddMember))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SignMemberTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSignMemberTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SignMemberTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threefoldtech.threefoldhub.multisigwallet.Msg/SignMemberTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SignMemberTransaction(ctx, req.(*MsgSignMemberTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveMember)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threefoldtech.threefoldhub.multisigwallet.Msg/RemoveMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveMember(ctx, req.(*MsgRemoveMember))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "threefoldtech.threefoldhub.multisigwallet.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWallet",
			Handler:    _Msg_CreateWallet_Handler,
		},
		{
			MethodName: "CreateTransaction",
			Handler:    _Msg_CreateTransaction_Handler,
		},
		{
			MethodName: "SignTransaction",
			Handler:    _Msg_SignTransaction_Handler,
		},
		{
			MethodName: "ExecuteTransaction",
			Handler:    _Msg_ExecuteTransaction_Handler,
		},
		{
			MethodName: "UpdateMinSigns",
			Handler:    _Msg_UpdateMinSigns_Handler,
		},
		{
			MethodName: "AddMember",
			Handler:    _Msg_AddMember_Handler,
		},
		{
			MethodName: "SignMemberTransaction",
			Handler:    _Msg_SignMemberTransaction_Handler,
		},
		{
			MethodName: "RemoveMember",
			Handler:    _Msg_RemoveMember_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "multisigwallet/tx.proto",
}

func (m *MsgCreateWallet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateWallet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateWallet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MinSigns) > 0 {
		i -= len(m.MinSigns)
		copy(dAtA[i:], m.MinSigns)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MinSigns)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Members) > 0 {
		i -= len(m.Members)
		copy(dAtA[i:], m.Members)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Members)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateWalletResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateWalletResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateWalletResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTransaction) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransaction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransaction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ToAddress) > 0 {
		i -= len(m.ToAddress)
		copy(dAtA[i:], m.ToAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ToAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.WalltName) > 0 {
		i -= len(m.WalltName)
		copy(dAtA[i:], m.WalltName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WalltName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTransactionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransactionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransactionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSignTransaction) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSignTransaction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSignTransaction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TransactionID) > 0 {
		i -= len(m.TransactionID)
		copy(dAtA[i:], m.TransactionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TransactionID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSignTransactionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSignTransactionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSignTransactionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgExecuteTransaction) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgExecuteTransaction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgExecuteTransaction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TransactionID) > 0 {
		i -= len(m.TransactionID)
		copy(dAtA[i:], m.TransactionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TransactionID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgExecuteTransactionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgExecuteTransactionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgExecuteTransactionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMinSigns) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMinSigns) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMinSigns) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MinSigns) > 0 {
		i -= len(m.MinSigns)
		copy(dAtA[i:], m.MinSigns)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MinSigns)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.WalletName) > 0 {
		i -= len(m.WalletName)
		copy(dAtA[i:], m.WalletName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WalletName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMinSignsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMinSignsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMinSignsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddMember) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddMember) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddMember) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Member) > 0 {
		i -= len(m.Member)
		copy(dAtA[i:], m.Member)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Member)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.WalltName) > 0 {
		i -= len(m.WalltName)
		copy(dAtA[i:], m.WalltName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WalltName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddMemberResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddMemberResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddMemberResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSignMemberTransaction) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSignMemberTransaction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSignMemberTransaction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TransactionID) > 0 {
		i -= len(m.TransactionID)
		copy(dAtA[i:], m.TransactionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TransactionID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSignMemberTransactionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSignMemberTransactionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSignMemberTransactionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveMember) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveMember) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveMember) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Member) > 0 {
		i -= len(m.Member)
		copy(dAtA[i:], m.Member)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Member)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.WalltName) > 0 {
		i -= len(m.WalltName)
		copy(dAtA[i:], m.WalltName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WalltName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveMemberResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveMemberResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveMemberResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateWallet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Members)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MinSigns)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateWalletResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTransaction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WalltName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ToAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTransactionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSignTransaction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TransactionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSignTransactionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgExecuteTransaction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TransactionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgExecuteTransactionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateMinSigns) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WalletName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MinSigns)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateMinSignsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddMember) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WalltName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Member)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddMemberResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSignMemberTransaction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TransactionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSignMemberTransactionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveMember) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WalltName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Member)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveMemberResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateWallet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateWallet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateWallet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Members", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Members = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinSigns", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MinSigns = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateWalletResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateWalletResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateWalletResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTransaction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransaction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransaction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WalltName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WalltName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTransactionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransactionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransactionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSignTransaction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSignTransaction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSignTransaction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TransactionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TransactionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSignTransactionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSignTransactionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSignTransactionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgExecuteTransaction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgExecuteTransaction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgExecuteTransaction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TransactionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TransactionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgExecuteTransactionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgExecuteTransactionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgExecuteTransactionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMinSigns) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMinSigns: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMinSigns: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WalletName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WalletName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinSigns", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MinSigns = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMinSignsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMinSignsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMinSignsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddMember) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddMember: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddMember: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WalltName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WalltName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Member", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Member = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddMemberResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddMemberResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddMemberResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSignMemberTransaction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSignMemberTransaction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSignMemberTransaction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TransactionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TransactionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSignMemberTransactionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSignMemberTransactionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSignMemberTransactionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveMember) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveMember: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveMember: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WalltName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WalltName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Member", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Member = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveMemberResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveMemberResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveMemberResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
